" vim: set ft=vim:
" leader keys----------- {{{
let mapleader=","
let maplocalleader=",,"
" }}}

" adding a semicolon to the end of the line
nnoremap <leader>; :execute "normal! mqA;\e`q"<CR>

" Grep Helper----------- {{{
" This one greps for the cWORD under Cursor...
"nnoremap <leader>G :silent execute "grep! -R " . shellescape(expand("<cWORD>")) . " ."<cr>:copen<cr>
nnoremap <leader>h :cprevious<CR>
nnoremap <leader>l :cnext<CR>
" }}}

" vimrc management----------- {{{
nnoremap <leader>ev     :vs $MYVIMRC<CR>
nnoremap <leader>evm    :vs $HOME/.vim_mapping<CR>
nnoremap <leader>sv     :source $MYVIMRC<CR>
nnoremap <leader><F3>   :w<CR> :source % <CR>
" }}}

" spacebar folding----------- {{{
nnoremap <space>        za
" }}}

" put esc on jk----------- {{{
vnoremap jk  <ESC>
vnoremap <ESC> <nop>
inoremap jk  <ESC>
inoremap <ESC> <nop>
" }}}

" remap motion----------- {{{
no <down> <Nop>
no <left> <Nop>
no <right> <Nop>
no <up> <Nop>

ino <down> <Nop>
ino <left> <Nop>
ino <right> <Nop>
ino <up> <Nop>

vno <down> <Nop>
vno <left> <Nop>
vno <right> <Nop>
vno <up> <Nop>
" }}}

" better brackethandling, hacky" ----------- {{{
" multiple keytrokes must be mapped for its own...
"ö
nnoremap ö [
nnoremap öö [[
"Ö
nnoremap Ö {
nnoremap ÖÖ {{
"ä
nnoremap ä ]
nnoremap ää ]]
"Ä
nnoremap Ä }
nnoremap ÄÄ }}
" }}}

" Tagbar----------- {{{
nnoremap <F8> :TagbarToggle<CR>
" }}}

" Buffers ----------- {{{
nnoremap <F9> :bprev<CR>
nnoremap <F10> :bnext<CR>
" }}}

" Python----------- {{{
" tut noch net so ganz...
" run und debug line wäre auch noch cool
augroup python_cmds
    autocmd!
"     autocmd BufWritePost,FileType python :!black % <CR>
"     autocmd FileType python set autoread
augroup END
" }}}

" abbreviations, common----------- {{{
iabbrev oweb oliver.schwanke@web.de
iabbrev twipweb    schwanke@twip-os.com
iabbrev tehn then
iabbrev tahn than
iabbrev adn and
iabbrev waht what
iabbrev isntall install
" }}}

" operator remapping" ----------- {{{
" parenthesis
onoremap p i(
" delete function body
onoremap b /return<CR>
" change contents of next parenthesis(
onoremap in( :<c-u>normal! f(vi(<CR>
" change contents of last parenthesis
onoremap il( :<c-u>normal! F)vi(<CR>
" change including parenthesis
onoremap an( :<c-u>normal! f(va(<CR>
onoremap an( :<c-u>normal! F(va(<CR>
" change inside curly braces
onoremap in{ :<c-u>normal! f{vi{<CR>
onoremap il{ :<c-u>normal! F{vi{<CR>
" change including curly braces
onoremap an{ :<c-u>normal! f{va{<CR>
onoremap al{ :<c-u>normal! F{va{<CR>
" check omap-info for details
" " }}}

" Vimscript filetype settings -------------------- {{{
augroup filteype_vim
    autocmd!
    autocmd FileType vim nnoremap --- O" ----------- {{{<ESC>0la
    autocmd FileType vim nnoremap ___ o" }}}<ESC>
    autocmd FileType lua,vim setlocal foldmethod=marker
augroup END
" }}}

" Rust----------- {{{
let g:rustfmt_autosave = 1
augroup rust_filetype
    autocmd!
    autocmd FileType rust nnoremap <F5> :!cargo run<CR>
    autocmd FileType rust nnoremap <leader><F5> :!cargo test<CR>
augroup END
" }}}

" Function Key mappings----------- {{{
nnoremap <F2> :YcmCompleter GetDoc<CR>
nnoremap <F3> :FZF<CR>
nnoremap <F4> :set relativenumber!<CR>
" " }}}

